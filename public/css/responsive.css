@media only screen and (max-width: 600px) {
  .navbar {
    padding: 10px; }
  .navbar-toggle {
    top: 10px; }
  li.menu-item-has-children ul li a {
    font-size: 16px;
    padding: 10px !important; }
  .nav li a {
    font-size: 16px;
    padding: 10px; } }

@media only screen and (max-width: 700px) {
  .nav li a {
    text-transform: uppercase;
    font-size: 18px; }
  .navbar-offcanvas, .navmenu {
    width: 200px; }
  #not-found .nf-container .nf-title {
    font-size: 25px; }
  #not-found .nf-container .nf-text {
    font-size: 12px; }
  #not-found .nf-container .nf-advice {
    font-size: 12px; } }

@media (max-width: 767px) {
  .hidden-xs {
    display: none !important; } }

@media only screen and (max-width: 992px) {
  header.sticky .navigations ul.header-menu-ul li a {
    padding: 15px 7px; }
  header .navigations ul.socials {
    display: none; }
  header .navigations ul.header-menu-ul li a {
    padding: 15px 7px; }
  .navbar {
    text-align: center;
    padding: 15px; }
    .navbar a {
      line-height: 51px;
      display: inline-block;
      margin-left: 44px;
      padding-left: 15px; }
  .navbar-toggle {
    float: left;
    margin-right: 0;
    position: absolute;
    top: 15px;
    left: 15px; }
  #not-found .nf-container .nf-title {
    font-size: 30px; }
  #not-found .nf-container .nf-text {
    font-size: 17px; }
  #not-found .nf-container .nf-advice {
    font-size: 17px; } }

@media (min-width: 1200px) {
  .col-lg-10 {
    width: 83.33333333%; }
  #not-found .nf-container .nf-title {
    font-size: 40px; }
  #not-found .nf-container .nf-text {
    font-size: 25px; }
  #not-found .nf-container .nf-advice {
    font-size: 20px; } }

@media (max-width: 1200px) {
  header .navigations ul.header-menu-ul li a {
    padding-top: 15px;
    padding-bottom: 20px; } }

@media only screen and (max-width: 1352px) {
  .logo-container, header .navigations {
    text-align: center; } }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2l2ZS5jc3MiLCJzb3VyY2VzIjpbInJlc3BvbnNpdmUuc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KXtcbiAgICAubmF2YmFyIHtcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICB9XG4gICAgXG4gICAgLm5hdmJhci10b2dnbGUge1xuICAgICAgICB0b3A6IDEwcHg7XG4gICAgfVxuICAgIFxuICAgIGxpe1xuICAgICAgICAmLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW57XG4gICAgICAgICAgICB1bCB7XG4gICAgICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAubmF2e1xuICAgICAgICBsaXtcbiAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDcwMHB4KXtcbiAgICAubmF2IHtcbiAgICAgICAgbGl7ICAgICAgICAgIFxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLm5hdmJhci1vZmZjYW52YXMsIC5uYXZtZW51IHtcbiAgICAgICAgd2lkdGg6IDIwMHB4O1xuICAgIH1cbiAgICBcbiAgICAjbm90LWZvdW5ke1xuICAgICAgICAubmYtY29udGFpbmVye1xuICAgICAgICAgICAgLm5mLXRpdGxle1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLm5mLXRleHR7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAubmYtYWR2aWNle1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KXtcbiAgICAuaGlkZGVuLXhzIHtcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICAgIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTJweCl7XG4gICAgaGVhZGVyIHtcbiAgICAgICAgJi5zdGlja3l7XG4gICAgICAgICAgICAubmF2aWdhdGlvbnN7XG4gICAgICAgICAgICAgICAgdWx7XG4gICAgICAgICAgICAgICAgICAgICYuaGVhZGVyLW1lbnUtdWx7XG4gICAgICAgICAgICAgICAgICAgICAgICBsaXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNXB4IDdweDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IFxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAubmF2aWdhdGlvbnN7XG4gICAgICAgICAgICB1bHtcbiAgICAgICAgICAgICAgICAmLnNvY2lhbHMge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLmhlYWRlci1tZW51LXVse1xuICAgICAgICAgICAgICAgICAgICBsaXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTVweCA3cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLm5hdmJhciB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgXG4gICAgICAgIGEge1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDUxcHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNDRweDtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAubmF2YmFyLXRvZ2dsZSB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAxNXB4O1xuICAgICAgICBsZWZ0OiAxNXB4O1xuICAgIH1cbiAgICBcbiAgICAjbm90LWZvdW5ke1xuICAgICAgICAubmYtY29udGFpbmVye1xuICAgICAgICAgICAgLm5mLXRpdGxle1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLm5mLXRleHR7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3B4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAubmYtYWR2aWNle1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTdweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCl7XG4gICAgLmNvbC1sZy0xMCB7XG4gICAgICAgIHdpZHRoOiA4My4zMzMzMzMzMyU7XG4gICAgfVxuICAgIFxuICAgICNub3QtZm91bmR7XG4gICAgICAgIC5uZi1jb250YWluZXJ7XG4gICAgICAgICAgICAubmYtdGl0bGV7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA0MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAubmYtdGV4dHtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI1cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5uZi1hZHZpY2V7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KXsgIFxuICAgIGhlYWRlcntcbiAgICAgICAgLm5hdmlnYXRpb25zIHtcbiAgICAgICAgICAgIHVse1xuICAgICAgICAgICAgICAgICYuaGVhZGVyLW1lbnUtdWx7XG4gICAgICAgICAgICAgICAgICAgIGxpe1xuICAgICAgICAgICAgICAgICAgICAgICAgYXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMTVweDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMzUycHgpe1xuICAgIC5sb2dvLWNvbnRhaW5lciwgaGVhZGVyIC5uYXZpZ2F0aW9ucyB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG59Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLE1BQUQsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBQzdCLEFBQUEsT0FBTyxDQUFDO0lBQ0osT0FBTyxFQUFFLElBQUssR0FDakI7RUFFRCxBQUFBLGNBQWMsQ0FBQztJQUNYLEdBQUcsRUFBRSxJQUFLLEdBQ2I7RUFFRCxBQUlnQixFQUpkLEFBQ0csdUJBQXVCLENBQ3BCLEVBQUUsQ0FDRSxFQUFFLENBQ0UsQ0FBQyxDQUFDO0lBQ0UsU0FBUyxFQUFFLElBQUs7SUFDaEIsT0FBTyxFQUFFLGVBQWdCLEdBQzVCO0VBTWpCLEFBRVEsSUFGSixDQUNBLEVBQUUsQ0FDRSxDQUFDLENBQUM7SUFDRSxTQUFTLEVBQUUsSUFBSztJQUNoQixPQUFPLEVBQUUsSUFBSyxHQUNqQjs7QUFLYixNQUFNLE1BQUQsTUFBTSxNQUFNLFNBQVMsRUFBRSxLQUFLO0VBQzdCLEFBRVEsSUFGSixDQUNBLEVBQUUsQ0FDRSxDQUFDLENBQUM7SUFDRSxjQUFjLEVBQUUsU0FBVTtJQUMxQixTQUFTLEVBQUUsSUFBSyxHQUNuQjtFQUlULEFBQUEsaUJBQWlCLEVBQUUsQUFBQSxRQUFRLENBQUM7SUFDeEIsS0FBSyxFQUFFLEtBQU0sR0FDaEI7RUFFRCxBQUVRLFVBRkUsQ0FDTixhQUFhLENBQ1QsU0FBUyxDQUFBO0lBQ0wsU0FBUyxFQUFFLElBQUssR0FDbkI7RUFKVCxBQU1RLFVBTkUsQ0FDTixhQUFhLENBS1QsUUFBUSxDQUFBO0lBQ0osU0FBUyxFQUFFLElBQUssR0FDbkI7RUFSVCxBQVVRLFVBVkUsQ0FDTixhQUFhLENBU1QsVUFBVSxDQUFBO0lBQ04sU0FBUyxFQUFFLElB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 */
